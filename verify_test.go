package clearsignverifier

import(
    "testing"
)

const (
    // crc-2.13.1 sha256sum.txt.sig
    // https://developers.redhat.com/content-gateway/file/pub/openshift-v4/clients/crc/2.13.1/sha256sum.txt.sig
    clearsignedMsgRH = `-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

4f0edb2b9dc9bed2830e0751ec5e4cc3340207f7ab2a0fb97e26ab3833ef3178  crc-linux-amd64.tar.xz
9403edcb8dceea4005864c04cac5fd344d185c647106967a02a26e9103d9b57e  crc-macos-installer.pkg
92686a17ef49328a190edacb40016ea6c4549d1116e6a1d5a5da6096c659160a  crc-windows-installer.zip
5f0709bad22f0d593a149a7d4a2b150ab0b6a4cc4f48abd1e1dae2853d6aa692  release-info.json
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQIVAwUBY9EAoxmeL5H9Qx1RAQgYTA//Uwtv3s1C0v4lbdKtUWLLewn2Gk8SbOgj
hbLf2ca1xa+IJrOe3cA7l2RFACVK6ShGcZLea79VF7Ev9uLab2hkNJGzYA/EImF1
eIyW6q86+ym0hM/F2D2jh6WT3kEuAld6VYULYs8NRmTlvy09Y7DZy9b5uJwySRlp
tXcJzzJVBQG/4bwe613Dxyea6P+U3Clw1KGh+K56n+f+m7wcR3V7BCnVR0AKP11F
YPbgQ2iWcm/2xh2WK9ZBjyEzRX5BUH0bBlM0ZI04eEHdnWWOJu/lvqZAS+fc3OUY
DY1VHvJCa0tLQHf9UyqmnvSp7TfDbX/xICdy89iS114kmKCqL8x6F59BNppFtaUg
4KKl9aCj5I7K+YN7q10Aw1iwXP8gILZcbaPKD5ZDfbrBvJw64D8GxUx1lCDuLgAY
33zhDoGlzfDjpZDMUejqE3Vn+DhGjRvGRqVg/pCXRkGuCimLT+bp750FNIn2nKxf
O718GZSFOf/WJU9PlrJMOyCDdx2/WTnn1mWCRMuY8Rz55zPJ3e+I4EVzL+t/UvMY
SUslWkU1c1xAWK5YLxQe8L/i96wThEX2zWScX7+HNxjQhGeykipHWmITMzCHWxK9
Kxbxip0cx9dpZDwBB32qV1+4rFAqbQKyGlob7cy7J3JzWd8GMXp27jSlIYPlLpgs
IGIItiPNqls=
=fyTO
-----END PGP SIGNATURE-----`
    // release key 2 (security@redhat.com)
    // https://www.redhat.com/security/data/fd431d51.txt
    pubkeyRedhatRelease2 = `-----BEGIN PGP PUBLIC KEY BLOCK-----

mQINBErgSTsBEACh2A4b0O9t+vzC9VrVtL1AKvUWi9OPCjkvR7Xd8DtJxeeMZ5eF
0HtzIG58qDRybwUe89FZprB1ffuUKzdE+HcL3FbNWSSOXVjZIersdXyH3NvnLLLF
0DNRB2ix3bXG9Rh/RXpFsNxDp2CEMdUvbYCzE79K1EnUTVh1L0Of023FtPSZXX0c
u7Pb5DI5lX5YeoXO6RoodrIGYJsVBQWnrWw4xNTconUfNPk0EGZtEnzvH2zyPoJh
XGF+Ncu9XwbalnYde10OCvSWAZ5zTCpoLMTvQjWpbCdWXJzCm6G+/hx9upke546H
5IjtYm4dTIVTnc3wvDiODgBKRzOl9rEOCIgOuGtDxRxcQkjrC+xvg5Vkqn7vBUyW
9pHedOU+PoF3DGOM+dqv+eNKBvh9YF9ugFAQBkcG7viZgvGEMGGUpzNgN7XnS1gj
/DPo9mZESOYnKceve2tIC87p2hqjrxOHuI7fkZYeNIcAoa83rBltFXaBDYhWAKS1
PcXS1/7JzP0ky7d0L6Xbu/If5kqWQpKwUInXtySRkuraVfuK3Bpa+X1XecWi24JY
HVtlNX025xx1ewVzGNCTlWn1skQN2OOoQTV4C8/qFpTW6DTWYurd4+fE0OJFJZQF
buhfXYwmRlVOgN5i77NTIJZJQfYFj38c/Iv5vZBPokO6mffrOTv3MHWVgQARAQAB
tDNSZWQgSGF0LCBJbmMuIChyZWxlYXNlIGtleSAyKSA8c2VjdXJpdHlAcmVkaGF0
LmNvbT6JAjYEEwECACAFAkrgSTsCGwMGCwkIBwMCBBUCCAMEFgIDAQIeAQIXgAAK
CRAZni+R/UMdUWzpD/9s5SFR/ZF3yjY5VLUFLMXIKUztNN3oc45fyLdTI3+UClKC
2tEruzYjqNHhqAEXa2sN1fMrsuKec61Ll2NfvJjkLKDvgVIh7kM7aslNYVOP6BTf
C/JJ7/ufz3UZmyViH/WDl+AYdgk3JqCIO5w5ryrC9IyBzYv2m0HqYbWfphY3uHw5
un3ndLJcu8+BGP5F+ONQEGl+DRH58Il9Jp3HwbRa7dvkPgEhfFR+1hI+Btta2C7E
0/2NKzCxZw7Lx3PBRcU92YKyaEihfy/aQKZCAuyfKiMvsmzs+4poIX7I9NQCJpyE
IGfINoZ7VxqHwRn/d5mw2MZTJjbzSf+Um9YJyA0iEEyD6qjriWQRbuxpQXmlAJbh
8okZ4gbVFv1F8MzK+4R8VvWJ0XxgtikSo72fHjwha7MAjqFnOq6eo6fEC/75g3NL
Ght5VdpGuHk0vbdENHMC8wS99e5qXGNDued3hlTavDMlEAHl34q2H9nakTGRF5Ki
JUfNh3DVRGhg8cMIti21njiRh7gyFI2OccATY7bBSr79JhuNwelHuxLrCFpY7V25
OFktl15jZJaMxuQBqYdBgSay2G0U6D1+7VsWufpzd/Abx1/c3oi9ZaJvW22kAggq
dzdA27UUYjWvx42w9menJwh/0jeQcTecIUd0d0rFcw/c1pvgMMl/Q73yzKgKYw==
=zbHE
-----END PGP PUBLIC KEY BLOCK-----`

    clearsignedMsg = `-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Secret message
-----BEGIN PGP SIGNATURE-----

iIYEARYKAC4WIQTdAZxTiOaf5vmtoes0dk73Jlg15AUCY+3h7hAcdGVzdEB0ZXN0
aW5nLmV1AAoJEDR2TvcmWDXk18UA/i3vxqJO+xF7AvYySqrrTILS6LNu7hIDMB2K
+LSX5Z41AQDUzMGZU3d8A9ZIIzbOVoaDiajoVrrdTRFdU5vqLDSXCQ==
=2kjF
-----END PGP SIGNATURE-----`

    pubkey = `-----BEGIN PGP PUBLIC KEY BLOCK-----

mDMEY+3XEhYJKwYBBAHaRw8BAQdAEmgN4cCP+NZN7aAZRQu2ldjS3jHE8iqKTC+O
654jNoW0GlRlc3QgS2V5IDx0ZXN0QHRlc3RpbmcuZXU+iJkEExYKAEEWIQTdAZxT
iOaf5vmtoes0dk73Jlg15AUCY+3XEgIbAwUJA8JnAAULCQgHAgIiAgYVCgkICwIE
FgIDAQIeBwIXgAAKCRA0dk73Jlg15DXxAP9ay07FiVtGiIp0t7GoEDBGReqPstTt
Xz08KIdVTgFfTgEA3y2xM13pOgQ1uY/WRare67kKRjtkryk3Pso5pGZRmw64OARj
7dcSEgorBgEEAZdVAQUBAQdAnm9V7Tspcg5lLqilwW93iPU4Ul0go08W51+H8dPP
JDQDAQgHiH4EGBYKACYWIQTdAZxTiOaf5vmtoes0dk73Jlg15AUCY+3XEgIbDAUJ
A8JnAAAKCRA0dk73Jlg15I61AP9FxYWIX3SaSVwZh2Zc7OL3T2PwjXdtBwpFfFDJ
baFwtAD9FoF3uKZTANtKRPcYoSJY1c9SBQE+9Ork7Eg3bZ6flAM=
=g7b2
-----END PGP PUBLIC KEY BLOCK-----`
    // clearsign with gpg 1.4.23
    clearsignedMsg1423 = `-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Secret message
-----BEGIN PGP SIGNATURE-----

iQEcBAEBAgAGBQJj7fbkAAoJEAT0whB/BFvbWhYH/0QwgVZD27N9eoGqTy/tGRsO
jNpbpXHAMv4cLMl4WnD3SRq+xkFsdl1rhnx9reTGiG8vpdLThJWIDaVc/zC/Bq1e
SXNd41ux8m3wTmtKd4bbCm8U6ne3EU9d7ZUtgoJVGDIM7KP89Avf6pbnE2JylBJs
Hi5jQLltg98qtX5KX7y2gmloHlF3iCVDFPLFzQmBKUlpCRpyNBxQchdOuRqyWfnd
HF0U0Qs4IvWUat+mVj6wKYYBwFM/fFXaCvAZ6fq40tGrlzSzadD3ctwwwD7iY69N
rg9sPZUQ/RarSgbvNY82cLm9DN/W4ZiFuqE+Hm297pvO4P6GFR1GYmDgsPi3FNI=
=Oxwd
-----END PGP SIGNATURE-----`
    // key generated by gpg 1.4.23
    pubkey1423 = `-----BEGIN PGP PUBLIC KEY BLOCK-----

mQENBGPt9YYBCAC09eJ4EYflzpKV03ixWXJ049x8lCmA7yAudH/9SjyZZf0FYMJx
yvt63urlqrI1I61F8y3+LIXMWl/n6e9VVDJQfyth2cdLlewd5/eb2Gv0EZ88405R
v2GvToYBWYXrF55/+3hATOcb15EJrpjGYOk86+t25EcN/J0A7rNPeMnyqCkzc7e4
RIj9whNeNP77mqKxUDeqZztWHcTbpt4NEweDaL4vjjZxzneeuGXhgyOkzrPuyY5L
wFexySKKY0dckIju+xCjulqp+HP4vK+h3TD/dnWs3Sf3GjqGGUVGwcEQbHIWk8v+
51Ckf+oQUEa14hFSoZC0yfmGcUs/woRmkpiZABEBAAG0HVRlc3QgS2V5IDx0ZXN0
a2V5QHRlc3RpbmcuZXU+iQE+BBMBAgAoBQJj7fWGAhsDBQkDwmcABgsJCAcDAgYV
CAIJCgsEFgIDAQIeAQIXgAAKCRAE9MIQfwRb27ODB/9uCeksE7KdpEvZMyGY/ulR
smbFfr8s8eP3Z/uP2jKif1oQT3vmxruWjmggoGhittPxoI1ljh9cPpjrYbleko/Z
sft6LxbhJBTFY4+5OSxI+gKKMlT49Z7TKH6Q1AVFSrOTOirMk3Nm+F2KRYP93GjA
r5iQDLQoBTrJjDanLQJPOrRsGVpM8Y0hXNL86GfCdqlJq1C4oxOqDLHPEIGTw0/f
2T7zX3Wnhw7QLAbIB3vLEJcSshVMyDPcsHXkT4HVhH+uegX1QrCREBM5XLowSJew
pbbQqY0QeSuFtWa250cu/+o85EMxB3cBhVl17qL9A+unX4nTBuxDOqUKt6w+Sv6V
uQENBGPt9YYBCADNr8k6cNxqqhbl78RIqgJyX+BGjOocS9KEGa90vDmjQgZ6TVWn
6VD2USE2iYDHzd/Vw9nt5LHcNYEw5g7VJRQvQeiveAm8NfWpDOEPvlXZ2faaZCgq
GOhcoJz+pf0LHYld/6g+EnjOWj/hfkItIVhx1TZgUUl5s88C0QzWd+aah2ncE4hT
f9Zm24LcOhWgfFaXIsETx5ASAz+QC/iI9G1vSH/jZ+XFoHAY1dadGiWPPeNI5P3g
H7bN6V16y0jz3BC4Hxt62qPBY/tOH5CxupfO/TF1LLzAllhaL2SZZu1tbcoTa3di
GU10L53dYciG79/gtwse8A8+YCpKXbI3j1eDABEBAAGJASUEGAECAA8FAmPt9YYC
GwwFCQPCZwAACgkQBPTCEH8EW9tQgAf/duRe6Me4YfZrgNbgHjZ30GPfenq3KWqJ
iz8JIxvBt4hkvHxANDMykHfL1mMOAguw7Z8ad+qhscUSjqLvh+OHqdnSvIqDbGRY
0MIP47Q+DqWt0kAV57SaBIYSzzafngxM5d4CZhx66JpdwbjptV4tq/nbhtsalP3o
hmn+H+MJko/zYU2ivPSpLST1VtJ3XXCBIwO60weIuDCD6ql8mf5kXTEq6B01XbqW
kbXtIn2VwVqR7gL67JMXdYu6LCYxaXg7zarK14z8/pFEc/lZQ1lkhr8POnigBnYI
d/bu9zsZKwVosmCvtA+ZYzwwQElu+OikKFWcuNAvkfTtxdmExQWbPQ==
=GrxY
-----END PGP PUBLIC KEY BLOCK-----`

    clearsignedShaDummyKey1423 = `-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

4f0edb2b9dc9bed2830e0751ec5e4cc3340207f7ab2a0fb97e26ab3833ef3178  crc-linux-amd64.tar.xz
9403edcb8dceea4005864c04cac5fd344d185c647106967a02a26e9103d9b57e  crc-macos-installer.pkg
92686a17ef49328a190edacb40016ea6c4549d1116e6a1d5a5da6096c659160a  crc-windows-installer.zip
5f0709bad22f0d593a149a7d4a2b150ab0b6a4cc4f48abd1e1dae2853d6aa692  release-info.json
-----BEGIN PGP SIGNATURE-----

iQEcBAEBAgAGBQJj7hATAAoJEAT0whB/BFvbePcH/A9ThR3XRr6FWPC5xlZo5r9G
mXD/klziuwCHI4wN27TxVJBEf6kvSGXAihSDS88eAEzhvFkvYLMckY0xzADWk9u8
rKaF8QLz5b10xlkqa27BdGRGUOuu+P/OXRreriTFixN/WyZL8pt5FFuBOryfFfI4
WYMP3TXGDCZ/F2t6zppOvuMUa+PfXh9f3qUo+1BrOrAruXWsVUo+kS//UKCbKsPm
zziXbbpcBX2LxbM67Yh+n0NdJcBu2Bk5S4h6lv7XX75m+ujewBu6pvvgYVvs8pKF
0fWksZTQY1Xvm8bdxdldhAYqbu57oLBIZUVwxdAaYtHQzhfTuQqNMY6Xq83825U=
=fGmT
-----END PGP SIGNATURE-----`

    clearsignedShaDummyKey1423MigratedTogpg2 = `-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

4f0edb2b9dc9bed2830e0751ec5e4cc3340207f7ab2a0fb97e26ab3833ef3178  crc-linux-amd64.tar.xz
9403edcb8dceea4005864c04cac5fd344d185c647106967a02a26e9103d9b57e  crc-macos-installer.pkg
92686a17ef49328a190edacb40016ea6c4549d1116e6a1d5a5da6096c659160a  crc-windows-installer.zip
5f0709bad22f0d593a149a7d4a2b150ab0b6a4cc4f48abd1e1dae2853d6aa692  release-info.json
-----BEGIN PGP SIGNATURE-----

iQFHBAEBCAAxFiEEjB7Llls8CtDgBytnBPTCEH8EW9sFAmPuFo0THHRlc3RrZXlA
dGVzdGluZy5ldQAKCRAE9MIQfwRb2zZiB/9P3zlxC5iecn3c7nBMKko7PJ6sjYl6
WXgodxyj23InQB2ZlI0a3xrEpGAkvj59dJJ7fmgVP1YIaQWrXlhNhLWz7vxArAbp
OfFztvdk5YdEIeO9tBb4v0uD1UHSt+QMqcu4sa2Tr6N9BVIVosIBu7Y9w2f7B7Ud
LAcVPN9OXiAXarK+c3vMsDwFbsNgE3CNxmVUONeqFQujggTDoSySInJXtOaWzhqw
xNbbhcign2lAc5Equ/7D9dThBcRZPGqETSMIimsV+Gcp3wEqh+QcYmbHk7mFgJPz
ySR7g2HtQasmt1zQZ6BqiqqPDvnB/yR88FbCy9co/wmfQiuGvVccC0Zp
=eRd3
-----END PGP SIGNATURE-----`

    pubkey1423MigratedToGpg2 = `-----BEGIN PGP PUBLIC KEY BLOCK-----

mQENBGPt9YYBCAC09eJ4EYflzpKV03ixWXJ049x8lCmA7yAudH/9SjyZZf0FYMJx
yvt63urlqrI1I61F8y3+LIXMWl/n6e9VVDJQfyth2cdLlewd5/eb2Gv0EZ88405R
v2GvToYBWYXrF55/+3hATOcb15EJrpjGYOk86+t25EcN/J0A7rNPeMnyqCkzc7e4
RIj9whNeNP77mqKxUDeqZztWHcTbpt4NEweDaL4vjjZxzneeuGXhgyOkzrPuyY5L
wFexySKKY0dckIju+xCjulqp+HP4vK+h3TD/dnWs3Sf3GjqGGUVGwcEQbHIWk8v+
51Ckf+oQUEa14hFSoZC0yfmGcUs/woRmkpiZABEBAAG0HVRlc3QgS2V5IDx0ZXN0
a2V5QHRlc3RpbmcuZXU+iQE+BBMBAgAoBQJj7fWGAhsDBQkDwmcABgsJCAcDAgYV
CAIJCgsEFgIDAQIeAQIXgAAKCRAE9MIQfwRb27ODB/9uCeksE7KdpEvZMyGY/ulR
smbFfr8s8eP3Z/uP2jKif1oQT3vmxruWjmggoGhittPxoI1ljh9cPpjrYbleko/Z
sft6LxbhJBTFY4+5OSxI+gKKMlT49Z7TKH6Q1AVFSrOTOirMk3Nm+F2KRYP93GjA
r5iQDLQoBTrJjDanLQJPOrRsGVpM8Y0hXNL86GfCdqlJq1C4oxOqDLHPEIGTw0/f
2T7zX3Wnhw7QLAbIB3vLEJcSshVMyDPcsHXkT4HVhH+uegX1QrCREBM5XLowSJew
pbbQqY0QeSuFtWa250cu/+o85EMxB3cBhVl17qL9A+unX4nTBuxDOqUKt6w+Sv6V
uQENBGPt9YYBCADNr8k6cNxqqhbl78RIqgJyX+BGjOocS9KEGa90vDmjQgZ6TVWn
6VD2USE2iYDHzd/Vw9nt5LHcNYEw5g7VJRQvQeiveAm8NfWpDOEPvlXZ2faaZCgq
GOhcoJz+pf0LHYld/6g+EnjOWj/hfkItIVhx1TZgUUl5s88C0QzWd+aah2ncE4hT
f9Zm24LcOhWgfFaXIsETx5ASAz+QC/iI9G1vSH/jZ+XFoHAY1dadGiWPPeNI5P3g
H7bN6V16y0jz3BC4Hxt62qPBY/tOH5CxupfO/TF1LLzAllhaL2SZZu1tbcoTa3di
GU10L53dYciG79/gtwse8A8+YCpKXbI3j1eDABEBAAGJASUEGAECAA8FAmPt9YYC
GwwFCQPCZwAACgkQBPTCEH8EW9tQgAf/duRe6Me4YfZrgNbgHjZ30GPfenq3KWqJ
iz8JIxvBt4hkvHxANDMykHfL1mMOAguw7Z8ad+qhscUSjqLvh+OHqdnSvIqDbGRY
0MIP47Q+DqWt0kAV57SaBIYSzzafngxM5d4CZhx66JpdwbjptV4tq/nbhtsalP3o
hmn+H+MJko/zYU2ivPSpLST1VtJ3XXCBIwO60weIuDCD6ql8mf5kXTEq6B01XbqW
kbXtIn2VwVqR7gL67JMXdYu6LCYxaXg7zarK14z8/pFEc/lZQ1lkhr8POnigBnYI
d/bu9zsZKwVosmCvtA+ZYzwwQElu+OikKFWcuNAvkfTtxdmExQWbPQ==
=GrxY
-----END PGP PUBLIC KEY BLOCK-----`
)

func TestVerifyDummy(t *testing.T)  {
    err := VerifyClearSign(clearsignedMsg, pubkey)
    if err != nil {
        t.Errorf("Unexpected error verifying signature with dummy key from gpg2: %v", err)
    }
}

func TestVerifyDummy1423(t *testing.T)  {
    err := VerifyClearSign(clearsignedMsg1423, pubkey1423)
    if err != nil {
        t.Errorf("Unexpected error verifying signature with dummy key from gpg1: %v", err)
    }
}

func TestVerifyErrorWhenUsingWrongKey(t *testing.T)  {
    err := VerifyClearSign(clearsignedMsg1423, pubkey)
    if err == nil {
        t.Errorf("Unexpected error verifying signature with dummy key from gpg1: %v", err)
    }
}

func TestVerifyRH(t *testing.T) {
    err := VerifyClearSign(clearsignedMsgRH, pubkeyRedhatRelease2)
    if err != nil {
        t.Errorf("Unexpected error verifying signature with RH key: %v", err)
    }
}

func TestVerifyRHErrorWithWrongKey(t *testing.T) {
    err := VerifyClearSign(clearsignedMsgRH, pubkey1423)
    if err == nil {
        t.Errorf("Unexpected error verifying signature with RH key: %v", err)
    }
}

func TestVerifyShaSignedByDummy1423(t *testing.T) {
    err := VerifyClearSign(clearsignedShaDummyKey1423, pubkey1423)
    if err != nil {
        t.Errorf("Unexpected error verifying signature on sha256sum.txt by dummy1423 key: %v", err)
    }
}

func TestVerifyShaSignedByDummy1423MigratedToGpg2(t *testing.T) {
    err := VerifyClearSign(clearsignedShaDummyKey1423MigratedTogpg2, pubkey1423MigratedToGpg2)
    if err != nil {
        t.Errorf("Unexpected error verifying signature on sha256sum.txt by dummy1423 key (migrated): %v", err)
    }
}

// func TestInspectKeyDummy(t *testing.T) {
//     err := InspectKey(pubkey)
//     if err != nil {
//         t.Errorf("Unexpected error parsing key dummy gpg2: %v", err)
//     }
// }
//
// func TestInspectKeyRH(t *testing.T) {
//     err := InspectKey(pubkeyRedhatRelease2)
//     if err != nil {
//         t.Errorf("Unexpected error parsing key RH: %v", err)
//     }
// }
//
// func TestInspectKey1423(t *testing.T) {
//     err := InspectKey(pubkey1423)
//     if err != nil {
//         t.Errorf("Unexpected error parsing key dummy gpg1: %v", err)
//     }
// }

